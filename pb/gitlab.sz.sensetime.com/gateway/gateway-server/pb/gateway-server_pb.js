// source: gitlab.sz.sensetime.com/gateway/gateway-server/pb/gateway-server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var github_com_mwitkow_go$proto$validators_validator_pb = require('../../../../github.com/mwitkow/go-proto-validators/validator_pb.js');
goog.object.extend(proto, github_com_mwitkow_go$proto$validators_validator_pb);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareGetRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareGetResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareInfo', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareListRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareListResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.AlertCompareResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.AuthorizationRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.AuthorizationResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.FaceBounding', null, global);
goog.exportSymbol('proto.sensetime.gateway.HitIdentityInfo', null, global);
goog.exportSymbol('proto.sensetime.gateway.HitResult', null, global);
goog.exportSymbol('proto.sensetime.gateway.Identity', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyGetRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyGetResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyInfo', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyListRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyListResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyProcessStatus', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.IdentityVerifyResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.ImageSource', null, global);
goog.exportSymbol('proto.sensetime.gateway.PersonnelLevel', null, global);
goog.exportSymbol('proto.sensetime.gateway.ProcessStatus', null, global);
goog.exportSymbol('proto.sensetime.gateway.UnAuthRequest', null, global);
goog.exportSymbol('proto.sensetime.gateway.UnAuthResponse', null, global);
goog.exportSymbol('proto.sensetime.gateway.Vertice', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AuthorizationRequest.displayName = 'proto.sensetime.gateway.AuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AuthorizationResponse.displayName = 'proto.sensetime.gateway.AuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.UnAuthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.UnAuthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.UnAuthRequest.displayName = 'proto.sensetime.gateway.UnAuthRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.UnAuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.UnAuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.UnAuthResponse.displayName = 'proto.sensetime.gateway.UnAuthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.HitResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.HitResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.HitResult.displayName = 'proto.sensetime.gateway.HitResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.Vertice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.Vertice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.Vertice.displayName = 'proto.sensetime.gateway.Vertice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.FaceBounding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.FaceBounding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.FaceBounding.displayName = 'proto.sensetime.gateway.FaceBounding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareRequest.displayName = 'proto.sensetime.gateway.AlertCompareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareResponse.displayName = 'proto.sensetime.gateway.AlertCompareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.HitIdentityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.HitIdentityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.HitIdentityInfo.displayName = 'proto.sensetime.gateway.HitIdentityInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareInfo.displayName = 'proto.sensetime.gateway.AlertCompareInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareGetRequest.displayName = 'proto.sensetime.gateway.AlertCompareGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareGetResponse.displayName = 'proto.sensetime.gateway.AlertCompareGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensetime.gateway.AlertCompareListRequest.repeatedFields_, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareListRequest.displayName = 'proto.sensetime.gateway.AlertCompareListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.AlertCompareListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensetime.gateway.AlertCompareListResponse.repeatedFields_, null);
};
goog.inherits(proto.sensetime.gateway.AlertCompareListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.AlertCompareListResponse.displayName = 'proto.sensetime.gateway.AlertCompareListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.Identity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.Identity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.Identity.displayName = 'proto.sensetime.gateway.Identity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensetime.gateway.IdentityVerifyInfo.repeatedFields_, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyInfo.displayName = 'proto.sensetime.gateway.IdentityVerifyInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyRequest.displayName = 'proto.sensetime.gateway.IdentityVerifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyResponse.displayName = 'proto.sensetime.gateway.IdentityVerifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyGetRequest.displayName = 'proto.sensetime.gateway.IdentityVerifyGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyGetResponse.displayName = 'proto.sensetime.gateway.IdentityVerifyGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyListRequest.displayName = 'proto.sensetime.gateway.IdentityVerifyListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sensetime.gateway.IdentityVerifyListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sensetime.gateway.IdentityVerifyListResponse.repeatedFields_, null);
};
goog.inherits(proto.sensetime.gateway.IdentityVerifyListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sensetime.gateway.IdentityVerifyListResponse.displayName = 'proto.sensetime.gateway.IdentityVerifyListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AuthorizationRequest}
 */
proto.sensetime.gateway.AuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AuthorizationRequest;
  return proto.sensetime.gateway.AuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AuthorizationRequest}
 */
proto.sensetime.gateway.AuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.sensetime.gateway.AuthorizationRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AuthorizationRequest.prototype.setAccount = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.sensetime.gateway.AuthorizationRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AuthorizationRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AuthorizationResponse}
 */
proto.sensetime.gateway.AuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AuthorizationResponse;
  return proto.sensetime.gateway.AuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AuthorizationResponse}
 */
proto.sensetime.gateway.AuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.sensetime.gateway.AuthorizationResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AuthorizationResponse.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.UnAuthRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.UnAuthRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.UnAuthRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.UnAuthRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.UnAuthRequest}
 */
proto.sensetime.gateway.UnAuthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.UnAuthRequest;
  return proto.sensetime.gateway.UnAuthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.UnAuthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.UnAuthRequest}
 */
proto.sensetime.gateway.UnAuthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.UnAuthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.UnAuthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.UnAuthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.UnAuthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.UnAuthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.UnAuthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.UnAuthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.UnAuthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.UnAuthResponse}
 */
proto.sensetime.gateway.UnAuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.UnAuthResponse;
  return proto.sensetime.gateway.UnAuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.UnAuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.UnAuthResponse}
 */
proto.sensetime.gateway.UnAuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.UnAuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.UnAuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.UnAuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.UnAuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.HitResult.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.HitResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.HitResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.HitResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    personnelLevel: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.HitResult}
 */
proto.sensetime.gateway.HitResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.HitResult;
  return proto.sensetime.gateway.HitResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.HitResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.HitResult}
 */
proto.sensetime.gateway.HitResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {!proto.sensetime.gateway.PersonnelLevel} */ (reader.readEnum());
      msg.setPersonnelLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.HitResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.HitResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.HitResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.HitResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getPersonnelLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string feature_key = 1;
 * @return {string}
 */
proto.sensetime.gateway.HitResult.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitResult.prototype.setFeatureKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float score = 2;
 * @return {number}
 */
proto.sensetime.gateway.HitResult.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.HitResult.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional PersonnelLevel personnel_level = 3;
 * @return {!proto.sensetime.gateway.PersonnelLevel}
 */
proto.sensetime.gateway.HitResult.prototype.getPersonnelLevel = function() {
  return /** @type {!proto.sensetime.gateway.PersonnelLevel} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.sensetime.gateway.PersonnelLevel} value */
proto.sensetime.gateway.HitResult.prototype.setPersonnelLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.Vertice.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.Vertice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.Vertice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.Vertice.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.Vertice}
 */
proto.sensetime.gateway.Vertice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.Vertice;
  return proto.sensetime.gateway.Vertice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.Vertice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.Vertice}
 */
proto.sensetime.gateway.Vertice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.Vertice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.Vertice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.Vertice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.Vertice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.sensetime.gateway.Vertice.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sensetime.gateway.Vertice.prototype.setX = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.sensetime.gateway.Vertice.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sensetime.gateway.Vertice.prototype.setY = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.FaceBounding.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.FaceBounding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.FaceBounding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.FaceBounding.toObject = function(includeInstance, msg) {
  var f, obj = {
    topLeft: (f = msg.getTopLeft()) && proto.sensetime.gateway.Vertice.toObject(includeInstance, f),
    bottomRight: (f = msg.getBottomRight()) && proto.sensetime.gateway.Vertice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.FaceBounding}
 */
proto.sensetime.gateway.FaceBounding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.FaceBounding;
  return proto.sensetime.gateway.FaceBounding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.FaceBounding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.FaceBounding}
 */
proto.sensetime.gateway.FaceBounding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensetime.gateway.Vertice;
      reader.readMessage(value,proto.sensetime.gateway.Vertice.deserializeBinaryFromReader);
      msg.setTopLeft(value);
      break;
    case 2:
      var value = new proto.sensetime.gateway.Vertice;
      reader.readMessage(value,proto.sensetime.gateway.Vertice.deserializeBinaryFromReader);
      msg.setBottomRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.FaceBounding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.FaceBounding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.FaceBounding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.FaceBounding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensetime.gateway.Vertice.serializeBinaryToWriter
    );
  }
  f = message.getBottomRight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sensetime.gateway.Vertice.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vertice top_left = 1;
 * @return {?proto.sensetime.gateway.Vertice}
 */
proto.sensetime.gateway.FaceBounding.prototype.getTopLeft = function() {
  return /** @type{?proto.sensetime.gateway.Vertice} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.Vertice, 1));
};


/** @param {?proto.sensetime.gateway.Vertice|undefined} value */
proto.sensetime.gateway.FaceBounding.prototype.setTopLeft = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.FaceBounding.prototype.clearTopLeft = function() {
  this.setTopLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.FaceBounding.prototype.hasTopLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vertice bottom_right = 2;
 * @return {?proto.sensetime.gateway.Vertice}
 */
proto.sensetime.gateway.FaceBounding.prototype.getBottomRight = function() {
  return /** @type{?proto.sensetime.gateway.Vertice} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.Vertice, 2));
};


/** @param {?proto.sensetime.gateway.Vertice|undefined} value */
proto.sensetime.gateway.FaceBounding.prototype.setBottomRight = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.FaceBounding.prototype.clearBottomRight = function() {
  this.setBottomRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.FaceBounding.prototype.hasBottomRight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceUnitCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceUnitName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceAddrCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceAddrDetail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceCoordinateX: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    deviceCoordinateY: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 9, ""),
    deviceExtraInfo: jspb.Message.getFieldWithDefault(msg, 10, ""),
    imageSource: jspb.Message.getFieldWithDefault(msg, 11, 0),
    capturedTime: (f = msg.getCapturedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    capturedImage: msg.getCapturedImage_asB64(),
    panoramicImage: msg.getPanoramicImage_asB64(),
    imageId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    uploadImage: msg.getUploadImage_asB64(),
    faceBounding: (f = msg.getFaceBounding()) && proto.sensetime.gateway.FaceBounding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareRequest}
 */
proto.sensetime.gateway.AlertCompareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareRequest;
  return proto.sensetime.gateway.AlertCompareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareRequest}
 */
proto.sensetime.gateway.AlertCompareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrDetail(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateX(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateY(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceExtraInfo(value);
      break;
    case 11:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCapturedTime(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCapturedImage(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPanoramicImage(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUploadImage(value);
      break;
    case 17:
      var value = new proto.sensetime.gateway.FaceBounding;
      reader.readMessage(value,proto.sensetime.gateway.FaceBounding.deserializeBinaryFromReader);
      msg.setFaceBounding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceUnitCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceUnitName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceAddrCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceAddrDetail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceCoordinateX();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getDeviceCoordinateY();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDeviceExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getCapturedTime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCapturedImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getPanoramicImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getUploadImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      16,
      f
    );
  }
  f = message.getFaceBounding();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.sensetime.gateway.FaceBounding.serializeBinaryToWriter
    );
  }
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_name = 2;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_unit_code = 3;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_unit_name = 4;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_addr_code = 5;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceAddrCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceAddrCode = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_addr_detail = 6;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceAddrDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceAddrDetail = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float device_coordinate_x = 7;
 * @return {number}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceCoordinateX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceCoordinateX = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float device_coordinate_y = 8;
 * @return {number}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceCoordinateY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceCoordinateY = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string device_tag = 9;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string device_extra_info = 10;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getDeviceExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setDeviceExtraInfo = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional ImageSource image_source = 11;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp captured_time = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getCapturedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setCapturedTime = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.clearCapturedTime = function() {
  this.setCapturedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.hasCapturedTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes captured_image = 13;
 * @return {!(string|Uint8Array)}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getCapturedImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes captured_image = 13;
 * This is a type-conversion wrapper around `getCapturedImage()`
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getCapturedImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCapturedImage()));
};


/**
 * optional bytes captured_image = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCapturedImage()`
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getCapturedImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCapturedImage()));
};


/** @param {!(string|Uint8Array)} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setCapturedImage = function(value) {
  jspb.Message.setProto3BytesField(this, 13, value);
};


/**
 * optional bytes panoramic_image = 14;
 * @return {!(string|Uint8Array)}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getPanoramicImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes panoramic_image = 14;
 * This is a type-conversion wrapper around `getPanoramicImage()`
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getPanoramicImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPanoramicImage()));
};


/**
 * optional bytes panoramic_image = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPanoramicImage()`
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getPanoramicImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPanoramicImage()));
};


/** @param {!(string|Uint8Array)} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setPanoramicImage = function(value) {
  jspb.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional string image_id = 15;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bytes upload_image = 16;
 * @return {!(string|Uint8Array)}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getUploadImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes upload_image = 16;
 * This is a type-conversion wrapper around `getUploadImage()`
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getUploadImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUploadImage()));
};


/**
 * optional bytes upload_image = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUploadImage()`
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getUploadImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUploadImage()));
};


/** @param {!(string|Uint8Array)} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setUploadImage = function(value) {
  jspb.Message.setProto3BytesField(this, 16, value);
};


/**
 * optional FaceBounding face_bounding = 17;
 * @return {?proto.sensetime.gateway.FaceBounding}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.getFaceBounding = function() {
  return /** @type{?proto.sensetime.gateway.FaceBounding} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.FaceBounding, 17));
};


/** @param {?proto.sensetime.gateway.FaceBounding|undefined} value */
proto.sensetime.gateway.AlertCompareRequest.prototype.setFaceBounding = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.clearFaceBounding = function() {
  this.setFaceBounding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareRequest.prototype.hasFaceBounding = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    result: (f = msg.getResult()) && proto.sensetime.gateway.HitResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareResponse}
 */
proto.sensetime.gateway.AlertCompareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareResponse;
  return proto.sensetime.gateway.AlertCompareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareResponse}
 */
proto.sensetime.gateway.AlertCompareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 2:
      var value = new proto.sensetime.gateway.HitResult;
      reader.readMessage(value,proto.sensetime.gateway.HitResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sensetime.gateway.HitResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareResponse.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional HitResult result = 2;
 * @return {?proto.sensetime.gateway.HitResult}
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.getResult = function() {
  return /** @type{?proto.sensetime.gateway.HitResult} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.HitResult, 2));
};


/** @param {?proto.sensetime.gateway.HitResult|undefined} value */
proto.sensetime.gateway.AlertCompareResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.HitIdentityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.HitIdentityInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.HitIdentityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    personnelLevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    personnelKind: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    idcard: jspb.Message.getFieldWithDefault(msg, 5, ""),
    birthday: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nation: jspb.Message.getFieldWithDefault(msg, 8, ""),
    addrPermanent: jspb.Message.getFieldWithDefault(msg, 9, ""),
    addrResident: jspb.Message.getFieldWithDefault(msg, 10, ""),
    controlReason: jspb.Message.getFieldWithDefault(msg, 11, ""),
    controlUnitCode: jspb.Message.getFieldWithDefault(msg, 12, ""),
    controlUnitName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    policeName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    policeTelephone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    registrationUnitCode: jspb.Message.getFieldWithDefault(msg, 16, ""),
    registrationUnitName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    registrationPersonName: jspb.Message.getFieldWithDefault(msg, 18, ""),
    registrationTime: (f = msg.getRegistrationTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    idcardImageUrl: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.HitIdentityInfo}
 */
proto.sensetime.gateway.HitIdentityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.HitIdentityInfo;
  return proto.sensetime.gateway.HitIdentityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.HitIdentityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.HitIdentityInfo}
 */
proto.sensetime.gateway.HitIdentityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    case 2:
      var value = /** @type {!proto.sensetime.gateway.PersonnelLevel} */ (reader.readEnum());
      msg.setPersonnelLevel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonnelKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcard(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSex(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNation(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddrPermanent(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddrResident(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlReason(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlUnitCode(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlUnitName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoliceName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoliceTelephone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationUnitCode(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationUnitName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationPersonName(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRegistrationTime(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcardImageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.HitIdentityInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.HitIdentityInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.HitIdentityInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPersonnelLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPersonnelKind();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIdcard();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSex();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAddrPermanent();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAddrResident();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getControlReason();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getControlUnitCode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getControlUnitName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPoliceName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPoliceTelephone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRegistrationUnitCode();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getRegistrationUnitName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getRegistrationPersonName();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getRegistrationTime();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIdcardImageUrl();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string feature_key = 1;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setFeatureKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PersonnelLevel personnel_level = 2;
 * @return {!proto.sensetime.gateway.PersonnelLevel}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getPersonnelLevel = function() {
  return /** @type {!proto.sensetime.gateway.PersonnelLevel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.sensetime.gateway.PersonnelLevel} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setPersonnelLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string personnel_kind = 3;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getPersonnelKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setPersonnelKind = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string idcard = 5;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getIdcard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setIdcard = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string birthday = 6;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setBirthday = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sex = 7;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setSex = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string nation = 8;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getNation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setNation = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string addr_permanent = 9;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getAddrPermanent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setAddrPermanent = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string addr_resident = 10;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getAddrResident = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setAddrResident = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string control_reason = 11;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getControlReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setControlReason = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string control_unit_code = 12;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getControlUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setControlUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string control_unit_name = 13;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getControlUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setControlUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string police_name = 14;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getPoliceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setPoliceName = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string police_telephone = 15;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getPoliceTelephone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setPoliceTelephone = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string registration_unit_code = 16;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getRegistrationUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setRegistrationUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string registration_unit_name = 17;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getRegistrationUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setRegistrationUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string registration_person_name = 18;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getRegistrationPersonName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setRegistrationPersonName = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional google.protobuf.Timestamp registration_time = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getRegistrationTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setRegistrationTime = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.clearRegistrationTime = function() {
  this.setRegistrationTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.hasRegistrationTime = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string idcard_image_url = 20;
 * @return {string}
 */
proto.sensetime.gateway.HitIdentityInfo.prototype.getIdcardImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.sensetime.gateway.HitIdentityInfo.prototype.setIdcardImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceUnitCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceUnitName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceAddrCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceAddrDetail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    deviceCoordinateX: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    deviceCoordinateY: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 10, ""),
    deviceExtraInfo: jspb.Message.getFieldWithDefault(msg, 11, ""),
    imageSource: jspb.Message.getFieldWithDefault(msg, 12, 0),
    capturedImageUrl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    panoramicImageUrl: jspb.Message.getFieldWithDefault(msg, 14, ""),
    capturedTime: (f = msg.getCapturedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdTime: (f = msg.getCreatedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isAlert: jspb.Message.getFieldWithDefault(msg, 17, 0),
    isProcessed: jspb.Message.getFieldWithDefault(msg, 18, 0),
    hitResult: (f = msg.getHitResult()) && proto.sensetime.gateway.HitResult.toObject(includeInstance, f),
    hitIdentityInfo: (f = msg.getHitIdentityInfo()) && proto.sensetime.gateway.HitIdentityInfo.toObject(includeInstance, f),
    identityVerifyStatus: jspb.Message.getFieldWithDefault(msg, 21, 0),
    similarIdentityInfo: (f = msg.getSimilarIdentityInfo()) && proto.sensetime.gateway.IdentityVerifyInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareInfo}
 */
proto.sensetime.gateway.AlertCompareInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareInfo;
  return proto.sensetime.gateway.AlertCompareInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareInfo}
 */
proto.sensetime.gateway.AlertCompareInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrDetail(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateX(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateY(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceExtraInfo(value);
      break;
    case 12:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCapturedImageUrl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPanoramicImageUrl(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCapturedTime(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedTime(value);
      break;
    case 17:
      var value = /** @type {!proto.sensetime.gateway.ProcessStatus} */ (reader.readEnum());
      msg.setIsAlert(value);
      break;
    case 18:
      var value = /** @type {!proto.sensetime.gateway.ProcessStatus} */ (reader.readEnum());
      msg.setIsProcessed(value);
      break;
    case 19:
      var value = new proto.sensetime.gateway.HitResult;
      reader.readMessage(value,proto.sensetime.gateway.HitResult.deserializeBinaryFromReader);
      msg.setHitResult(value);
      break;
    case 20:
      var value = new proto.sensetime.gateway.HitIdentityInfo;
      reader.readMessage(value,proto.sensetime.gateway.HitIdentityInfo.deserializeBinaryFromReader);
      msg.setHitIdentityInfo(value);
      break;
    case 21:
      var value = /** @type {!proto.sensetime.gateway.IdentityVerifyProcessStatus} */ (reader.readEnum());
      msg.setIdentityVerifyStatus(value);
      break;
    case 22:
      var value = new proto.sensetime.gateway.IdentityVerifyInfo;
      reader.readMessage(value,proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinaryFromReader);
      msg.setSimilarIdentityInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceUnitCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceUnitName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceAddrCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceAddrDetail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDeviceCoordinateX();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDeviceCoordinateY();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDeviceExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getCapturedImageUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPanoramicImageUrl();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCapturedTime();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedTime();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsAlert();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getIsProcessed();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = message.getHitResult();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.sensetime.gateway.HitResult.serializeBinaryToWriter
    );
  }
  f = message.getHitIdentityInfo();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.sensetime.gateway.HitIdentityInfo.serializeBinaryToWriter
    );
  }
  f = message.getIdentityVerifyStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = message.getSimilarIdentityInfo();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.sensetime.gateway.IdentityVerifyInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_name = 3;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_unit_code = 4;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_unit_name = 5;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_addr_code = 6;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceAddrCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceAddrCode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string device_addr_detail = 7;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceAddrDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceAddrDetail = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional float device_coordinate_x = 8;
 * @return {number}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceCoordinateX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceCoordinateX = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float device_coordinate_y = 9;
 * @return {number}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceCoordinateY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceCoordinateY = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string device_tag = 10;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string device_extra_info = 11;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getDeviceExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setDeviceExtraInfo = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional ImageSource image_source = 12;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional string captured_image_url = 13;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getCapturedImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setCapturedImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string panoramic_image_url = 14;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getPanoramicImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setPanoramicImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp captured_time = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getCapturedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setCapturedTime = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.clearCapturedTime = function() {
  this.setCapturedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.hasCapturedTime = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp created_time = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getCreatedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setCreatedTime = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.clearCreatedTime = function() {
  this.setCreatedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.hasCreatedTime = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ProcessStatus is_alert = 17;
 * @return {!proto.sensetime.gateway.ProcessStatus}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getIsAlert = function() {
  return /** @type {!proto.sensetime.gateway.ProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {!proto.sensetime.gateway.ProcessStatus} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setIsAlert = function(value) {
  jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional ProcessStatus is_processed = 18;
 * @return {!proto.sensetime.gateway.ProcessStatus}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getIsProcessed = function() {
  return /** @type {!proto.sensetime.gateway.ProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {!proto.sensetime.gateway.ProcessStatus} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setIsProcessed = function(value) {
  jspb.Message.setProto3EnumField(this, 18, value);
};


/**
 * optional HitResult hit_result = 19;
 * @return {?proto.sensetime.gateway.HitResult}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getHitResult = function() {
  return /** @type{?proto.sensetime.gateway.HitResult} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.HitResult, 19));
};


/** @param {?proto.sensetime.gateway.HitResult|undefined} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setHitResult = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.clearHitResult = function() {
  this.setHitResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.hasHitResult = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional HitIdentityInfo hit_identity_info = 20;
 * @return {?proto.sensetime.gateway.HitIdentityInfo}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getHitIdentityInfo = function() {
  return /** @type{?proto.sensetime.gateway.HitIdentityInfo} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.HitIdentityInfo, 20));
};


/** @param {?proto.sensetime.gateway.HitIdentityInfo|undefined} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setHitIdentityInfo = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.clearHitIdentityInfo = function() {
  this.setHitIdentityInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.hasHitIdentityInfo = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional IdentityVerifyProcessStatus identity_verify_status = 21;
 * @return {!proto.sensetime.gateway.IdentityVerifyProcessStatus}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getIdentityVerifyStatus = function() {
  return /** @type {!proto.sensetime.gateway.IdentityVerifyProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {!proto.sensetime.gateway.IdentityVerifyProcessStatus} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setIdentityVerifyStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 21, value);
};


/**
 * optional IdentityVerifyInfo similar_identity_info = 22;
 * @return {?proto.sensetime.gateway.IdentityVerifyInfo}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.getSimilarIdentityInfo = function() {
  return /** @type{?proto.sensetime.gateway.IdentityVerifyInfo} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.IdentityVerifyInfo, 22));
};


/** @param {?proto.sensetime.gateway.IdentityVerifyInfo|undefined} value */
proto.sensetime.gateway.AlertCompareInfo.prototype.setSimilarIdentityInfo = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.clearSimilarIdentityInfo = function() {
  this.setSimilarIdentityInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareInfo.prototype.hasSimilarIdentityInfo = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isReturnHitIdentityInfo: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    isReturnSimilarIdentityInfo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareGetRequest}
 */
proto.sensetime.gateway.AlertCompareGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareGetRequest;
  return proto.sensetime.gateway.AlertCompareGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareGetRequest}
 */
proto.sensetime.gateway.AlertCompareGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReturnHitIdentityInfo(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReturnSimilarIdentityInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsReturnHitIdentityInfo();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsReturnSimilarIdentityInfo();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_return_hit_identity_info = 2;
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.getIsReturnHitIdentityInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.setIsReturnHitIdentityInfo = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool is_return_similar_identity_info = 3;
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.getIsReturnSimilarIdentityInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.sensetime.gateway.AlertCompareGetRequest.prototype.setIsReturnSimilarIdentityInfo = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    alertCompareInfo: (f = msg.getAlertCompareInfo()) && proto.sensetime.gateway.AlertCompareInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareGetResponse}
 */
proto.sensetime.gateway.AlertCompareGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareGetResponse;
  return proto.sensetime.gateway.AlertCompareGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareGetResponse}
 */
proto.sensetime.gateway.AlertCompareGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensetime.gateway.AlertCompareInfo;
      reader.readMessage(value,proto.sensetime.gateway.AlertCompareInfo.deserializeBinaryFromReader);
      msg.setAlertCompareInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlertCompareInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensetime.gateway.AlertCompareInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional AlertCompareInfo alert_compare_info = 1;
 * @return {?proto.sensetime.gateway.AlertCompareInfo}
 */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.getAlertCompareInfo = function() {
  return /** @type{?proto.sensetime.gateway.AlertCompareInfo} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.AlertCompareInfo, 1));
};


/** @param {?proto.sensetime.gateway.AlertCompareInfo|undefined} value */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.setAlertCompareInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.clearAlertCompareInfo = function() {
  this.setAlertCompareInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareGetResponse.prototype.hasAlertCompareInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensetime.gateway.AlertCompareListRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    marker: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 6, ""),
    personnelLevelList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    imageSource: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isHitOnly: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    alertStatus: jspb.Message.getFieldWithDefault(msg, 10, 0),
    processStatus: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isReturnHitIdentityInfo: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareListRequest}
 */
proto.sensetime.gateway.AlertCompareListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareListRequest;
  return proto.sensetime.gateway.AlertCompareListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareListRequest}
 */
proto.sensetime.gateway.AlertCompareListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarker(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 7:
      var value = /** @type {!Array<!proto.sensetime.gateway.PersonnelLevel>} */ (reader.readPackedEnum());
      msg.setPersonnelLevelList(value);
      break;
    case 8:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHitOnly(value);
      break;
    case 10:
      var value = /** @type {!proto.sensetime.gateway.ProcessStatus} */ (reader.readEnum());
      msg.setAlertStatus(value);
      break;
    case 11:
      var value = /** @type {!proto.sensetime.gateway.ProcessStatus} */ (reader.readEnum());
      msg.setProcessStatus(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReturnHitIdentityInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMarker();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPersonnelLevelList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getIsHitOnly();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getAlertStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getProcessStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getIsReturnHitIdentityInfo();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string marker = 4;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getMarker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setMarker = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_id = 5;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_tag = 6;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated PersonnelLevel personnel_level = 7;
 * @return {!Array<!proto.sensetime.gateway.PersonnelLevel>}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getPersonnelLevelList = function() {
  return /** @type {!Array<!proto.sensetime.gateway.PersonnelLevel>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<!proto.sensetime.gateway.PersonnelLevel>} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setPersonnelLevelList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.sensetime.gateway.PersonnelLevel} value
 * @param {number=} opt_index
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.addPersonnelLevel = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.clearPersonnelLevelList = function() {
  this.setPersonnelLevelList([]);
};


/**
 * optional ImageSource image_source = 8;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bool is_hit_only = 9;
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getIsHitOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setIsHitOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional ProcessStatus alert_status = 10;
 * @return {!proto.sensetime.gateway.ProcessStatus}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getAlertStatus = function() {
  return /** @type {!proto.sensetime.gateway.ProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.sensetime.gateway.ProcessStatus} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setAlertStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional ProcessStatus process_status = 11;
 * @return {!proto.sensetime.gateway.ProcessStatus}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getProcessStatus = function() {
  return /** @type {!proto.sensetime.gateway.ProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.sensetime.gateway.ProcessStatus} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setProcessStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool is_return_hit_identity_info = 12;
 * @return {boolean}
 */
proto.sensetime.gateway.AlertCompareListRequest.prototype.getIsReturnHitIdentityInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.sensetime.gateway.AlertCompareListRequest.prototype.setIsReturnHitIdentityInfo = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensetime.gateway.AlertCompareListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.AlertCompareListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.AlertCompareListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    alertCompareInfosList: jspb.Message.toObjectList(msg.getAlertCompareInfosList(),
    proto.sensetime.gateway.AlertCompareInfo.toObject, includeInstance),
    nextMarker: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.AlertCompareListResponse}
 */
proto.sensetime.gateway.AlertCompareListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.AlertCompareListResponse;
  return proto.sensetime.gateway.AlertCompareListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.AlertCompareListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.AlertCompareListResponse}
 */
proto.sensetime.gateway.AlertCompareListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensetime.gateway.AlertCompareInfo;
      reader.readMessage(value,proto.sensetime.gateway.AlertCompareInfo.deserializeBinaryFromReader);
      msg.addAlertCompareInfos(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextMarker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.AlertCompareListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.AlertCompareListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.AlertCompareListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlertCompareInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sensetime.gateway.AlertCompareInfo.serializeBinaryToWriter
    );
  }
  f = message.getNextMarker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated AlertCompareInfo alert_compare_infos = 1;
 * @return {!Array<!proto.sensetime.gateway.AlertCompareInfo>}
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.getAlertCompareInfosList = function() {
  return /** @type{!Array<!proto.sensetime.gateway.AlertCompareInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensetime.gateway.AlertCompareInfo, 1));
};


/** @param {!Array<!proto.sensetime.gateway.AlertCompareInfo>} value */
proto.sensetime.gateway.AlertCompareListResponse.prototype.setAlertCompareInfosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sensetime.gateway.AlertCompareInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensetime.gateway.AlertCompareInfo}
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.addAlertCompareInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sensetime.gateway.AlertCompareInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.clearAlertCompareInfosList = function() {
  this.setAlertCompareInfosList([]);
};


/**
 * optional string next_marker = 2;
 * @return {string}
 */
proto.sensetime.gateway.AlertCompareListResponse.prototype.getNextMarker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.AlertCompareListResponse.prototype.setNextMarker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.Identity.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.Identity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.Identity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.Identity.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    idcard: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    birthday: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nation: jspb.Message.getFieldWithDefault(msg, 5, ""),
    addrCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    addrDetail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    idcardImageUrl: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.Identity}
 */
proto.sensetime.gateway.Identity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.Identity;
  return proto.sensetime.gateway.Identity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.Identity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.Identity}
 */
proto.sensetime.gateway.Identity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcard(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddrCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddrDetail(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcardImageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.Identity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.Identity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.Identity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.Identity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdcard();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddrCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddrDetail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getIdcardImageUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string idcard = 2;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getIdcard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setIdcard = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sex = 3;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setSex = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string birthday = 4;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setBirthday = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string nation = 5;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getNation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setNation = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string addr_code = 6;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getAddrCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setAddrCode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string addr_detail = 7;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getAddrDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setAddrDetail = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional float score = 8;
 * @return {number}
 */
proto.sensetime.gateway.Identity.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.Identity.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string idcard_image_url = 9;
 * @return {string}
 */
proto.sensetime.gateway.Identity.prototype.getIdcardImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.sensetime.gateway.Identity.prototype.setIdcardImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensetime.gateway.IdentityVerifyInfo.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceUnitCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceUnitName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceAddrCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceAddrDetail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    deviceCoordinateX: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    deviceCoordinateY: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 10, ""),
    deviceExtraInfo: jspb.Message.getFieldWithDefault(msg, 11, ""),
    imageSource: jspb.Message.getFieldWithDefault(msg, 12, 0),
    capturedImageUrl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    reqSaveTime: (f = msg.getReqSaveTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    reqSendTime: (f = msg.getReqSendTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    reqSendErrInfo: jspb.Message.getFieldWithDefault(msg, 16, ""),
    resRecvTime: (f = msg.getResRecvTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    resRecvErrInfo: jspb.Message.getFieldWithDefault(msg, 18, ""),
    identityConut: jspb.Message.getFieldWithDefault(msg, 19, 0),
    status: jspb.Message.getFieldWithDefault(msg, 20, 0),
    identitiesList: jspb.Message.toObjectList(msg.getIdentitiesList(),
    proto.sensetime.gateway.Identity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyInfo}
 */
proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyInfo;
  return proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyInfo}
 */
proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrDetail(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateX(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateY(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceExtraInfo(value);
      break;
    case 12:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCapturedImageUrl(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReqSaveTime(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReqSendTime(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqSendErrInfo(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResRecvTime(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setResRecvErrInfo(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdentityConut(value);
      break;
    case 20:
      var value = /** @type {!proto.sensetime.gateway.IdentityVerifyProcessStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 21:
      var value = new proto.sensetime.gateway.Identity;
      reader.readMessage(value,proto.sensetime.gateway.Identity.deserializeBinaryFromReader);
      msg.addIdentities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceUnitCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceUnitName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceAddrCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceAddrDetail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDeviceCoordinateX();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDeviceCoordinateY();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDeviceExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getCapturedImageUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getReqSaveTime();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReqSendTime();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReqSendErrInfo();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getResRecvTime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getResRecvErrInfo();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getIdentityConut();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getIdentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.sensetime.gateway.Identity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_name = 3;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_unit_code = 4;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_unit_name = 5;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_addr_code = 6;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceAddrCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceAddrCode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string device_addr_detail = 7;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceAddrDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceAddrDetail = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional float device_coordinate_x = 8;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceCoordinateX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceCoordinateX = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float device_coordinate_y = 9;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceCoordinateY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceCoordinateY = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string device_tag = 10;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string device_extra_info = 11;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getDeviceExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setDeviceExtraInfo = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional ImageSource image_source = 12;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional string captured_image_url = 13;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getCapturedImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setCapturedImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp req_save_time = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getReqSaveTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setReqSaveTime = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.clearReqSaveTime = function() {
  this.setReqSaveTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.hasReqSaveTime = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Timestamp req_send_time = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getReqSendTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setReqSendTime = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.clearReqSendTime = function() {
  this.setReqSendTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.hasReqSendTime = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string req_send_err_info = 16;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getReqSendErrInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setReqSendErrInfo = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional google.protobuf.Timestamp res_recv_time = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getResRecvTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setResRecvTime = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.clearResRecvTime = function() {
  this.setResRecvTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.hasResRecvTime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string res_recv_err_info = 18;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getResRecvErrInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setResRecvErrInfo = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 identity_conut = 19;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getIdentityConut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setIdentityConut = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional IdentityVerifyProcessStatus status = 20;
 * @return {!proto.sensetime.gateway.IdentityVerifyProcessStatus}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getStatus = function() {
  return /** @type {!proto.sensetime.gateway.IdentityVerifyProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {!proto.sensetime.gateway.IdentityVerifyProcessStatus} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 20, value);
};


/**
 * repeated Identity identities = 21;
 * @return {!Array<!proto.sensetime.gateway.Identity>}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.getIdentitiesList = function() {
  return /** @type{!Array<!proto.sensetime.gateway.Identity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensetime.gateway.Identity, 21));
};


/** @param {!Array<!proto.sensetime.gateway.Identity>} value */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.setIdentitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.sensetime.gateway.Identity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensetime.gateway.Identity}
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.addIdentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.sensetime.gateway.Identity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sensetime.gateway.IdentityVerifyInfo.prototype.clearIdentitiesList = function() {
  this.setIdentitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceUnitCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceUnitName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceAddrCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceAddrDetail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceCoordinateX: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    deviceCoordinateY: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 9, ""),
    deviceExtraInfo: jspb.Message.getFieldWithDefault(msg, 10, ""),
    imageSource: jspb.Message.getFieldWithDefault(msg, 11, 0),
    imageId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    uploadImage: msg.getUploadImage_asB64(),
    faceBounding: (f = msg.getFaceBounding()) && proto.sensetime.gateway.FaceBounding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyRequest}
 */
proto.sensetime.gateway.IdentityVerifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyRequest;
  return proto.sensetime.gateway.IdentityVerifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyRequest}
 */
proto.sensetime.gateway.IdentityVerifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUnitName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAddrDetail(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateX(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeviceCoordinateY(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceExtraInfo(value);
      break;
    case 11:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUploadImage(value);
      break;
    case 14:
      var value = new proto.sensetime.gateway.FaceBounding;
      reader.readMessage(value,proto.sensetime.gateway.FaceBounding.deserializeBinaryFromReader);
      msg.setFaceBounding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceUnitCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceUnitName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceAddrCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceAddrDetail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceCoordinateX();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getDeviceCoordinateY();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDeviceExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getUploadImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getFaceBounding();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.sensetime.gateway.FaceBounding.serializeBinaryToWriter
    );
  }
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_name = 2;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_unit_code = 3;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceUnitCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceUnitCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_unit_name = 4;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceUnitName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceUnitName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_addr_code = 5;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceAddrCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceAddrCode = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_addr_detail = 6;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceAddrDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceAddrDetail = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float device_coordinate_x = 7;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceCoordinateX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceCoordinateX = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float device_coordinate_y = 8;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceCoordinateY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceCoordinateY = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string device_tag = 9;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string device_extra_info = 10;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getDeviceExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setDeviceExtraInfo = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional ImageSource image_source = 11;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string image_id = 12;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bytes upload_image = 13;
 * @return {!(string|Uint8Array)}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getUploadImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes upload_image = 13;
 * This is a type-conversion wrapper around `getUploadImage()`
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getUploadImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUploadImage()));
};


/**
 * optional bytes upload_image = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUploadImage()`
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getUploadImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUploadImage()));
};


/** @param {!(string|Uint8Array)} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setUploadImage = function(value) {
  jspb.Message.setProto3BytesField(this, 13, value);
};


/**
 * optional FaceBounding face_bounding = 14;
 * @return {?proto.sensetime.gateway.FaceBounding}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.getFaceBounding = function() {
  return /** @type{?proto.sensetime.gateway.FaceBounding} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.FaceBounding, 14));
};


/** @param {?proto.sensetime.gateway.FaceBounding|undefined} value */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.setFaceBounding = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.clearFaceBounding = function() {
  this.setFaceBounding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyRequest.prototype.hasFaceBounding = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyResponse}
 */
proto.sensetime.gateway.IdentityVerifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyResponse;
  return proto.sensetime.gateway.IdentityVerifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyResponse}
 */
proto.sensetime.gateway.IdentityVerifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyResponse.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyResponse.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyGetRequest}
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyGetRequest;
  return proto.sensetime.gateway.IdentityVerifyGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyGetRequest}
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string image_id = 1;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyGetRequest.prototype.getImageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyGetRequest.prototype.setImageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityVerifyInfo: (f = msg.getIdentityVerifyInfo()) && proto.sensetime.gateway.IdentityVerifyInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyGetResponse}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyGetResponse;
  return proto.sensetime.gateway.IdentityVerifyGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyGetResponse}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensetime.gateway.IdentityVerifyInfo;
      reader.readMessage(value,proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinaryFromReader);
      msg.setIdentityVerifyInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityVerifyInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sensetime.gateway.IdentityVerifyInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional IdentityVerifyInfo identity_verify_info = 1;
 * @return {?proto.sensetime.gateway.IdentityVerifyInfo}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.getIdentityVerifyInfo = function() {
  return /** @type{?proto.sensetime.gateway.IdentityVerifyInfo} */ (
    jspb.Message.getWrapperField(this, proto.sensetime.gateway.IdentityVerifyInfo, 1));
};


/** @param {?proto.sensetime.gateway.IdentityVerifyInfo|undefined} value */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.setIdentityVerifyInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.clearIdentityVerifyInfo = function() {
  this.setIdentityVerifyInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyGetResponse.prototype.hasIdentityVerifyInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    marker: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deviceTag: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imageSource: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyListRequest}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyListRequest;
  return proto.sensetime.gateway.IdentityVerifyListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyListRequest}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarker(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceTag(value);
      break;
    case 7:
      var value = /** @type {!proto.sensetime.gateway.ImageSource} */ (reader.readEnum());
      msg.setImageSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMarker();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeviceTag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImageSource();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string marker = 4;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getMarker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setMarker = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_id = 5;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string device_tag = 6;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getDeviceTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setDeviceTag = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ImageSource image_source = 7;
 * @return {!proto.sensetime.gateway.ImageSource}
 */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.getImageSource = function() {
  return /** @type {!proto.sensetime.gateway.ImageSource} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.sensetime.gateway.ImageSource} value */
proto.sensetime.gateway.IdentityVerifyListRequest.prototype.setImageSource = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sensetime.gateway.IdentityVerifyListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sensetime.gateway.IdentityVerifyListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sensetime.gateway.IdentityVerifyListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityVerifyInfosList: jspb.Message.toObjectList(msg.getIdentityVerifyInfosList(),
    proto.sensetime.gateway.IdentityVerifyInfo.toObject, includeInstance),
    nextMarker: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sensetime.gateway.IdentityVerifyListResponse}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sensetime.gateway.IdentityVerifyListResponse;
  return proto.sensetime.gateway.IdentityVerifyListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sensetime.gateway.IdentityVerifyListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sensetime.gateway.IdentityVerifyListResponse}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sensetime.gateway.IdentityVerifyInfo;
      reader.readMessage(value,proto.sensetime.gateway.IdentityVerifyInfo.deserializeBinaryFromReader);
      msg.addIdentityVerifyInfos(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextMarker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sensetime.gateway.IdentityVerifyListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sensetime.gateway.IdentityVerifyListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sensetime.gateway.IdentityVerifyListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityVerifyInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sensetime.gateway.IdentityVerifyInfo.serializeBinaryToWriter
    );
  }
  f = message.getNextMarker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated IdentityVerifyInfo identity_verify_infos = 1;
 * @return {!Array<!proto.sensetime.gateway.IdentityVerifyInfo>}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.getIdentityVerifyInfosList = function() {
  return /** @type{!Array<!proto.sensetime.gateway.IdentityVerifyInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sensetime.gateway.IdentityVerifyInfo, 1));
};


/** @param {!Array<!proto.sensetime.gateway.IdentityVerifyInfo>} value */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.setIdentityVerifyInfosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sensetime.gateway.IdentityVerifyInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sensetime.gateway.IdentityVerifyInfo}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.addIdentityVerifyInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sensetime.gateway.IdentityVerifyInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.clearIdentityVerifyInfosList = function() {
  this.setIdentityVerifyInfosList([]);
};


/**
 * optional string next_marker = 2;
 * @return {string}
 */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.getNextMarker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sensetime.gateway.IdentityVerifyListResponse.prototype.setNextMarker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.sensetime.gateway.PersonnelLevel = {
  PERSONNEL_LEVEL_UNKNOWN: 0,
  PERSONNEL_LEVEL_RED: 1,
  PERSONNEL_LEVEL_ORANGE: 2,
  PERSONNEL_LEVEL_YELLOW: 3,
  PERSONNEL_LEVEL_OTHER: 4
};

/**
 * @enum {number}
 */
proto.sensetime.gateway.ImageSource = {
  IMAGE_SOURCE_UNKNOWN: 0,
  IMAGE_SOURCE_CAPTURE: 1,
  IMAGE_SOURCE_LIVENESS: 2,
  IMAGE_SOURCE_UPLOAD: 3
};

/**
 * @enum {number}
 */
proto.sensetime.gateway.ProcessStatus = {
  PROCESS_STATUS_UNKNOWN: 0,
  PROCESS_STATUS_FALSE: 1,
  PROCESS_STATUS_TRUE: 2,
  PROCESS_STATUS_ALL: 100
};

/**
 * @enum {number}
 */
proto.sensetime.gateway.IdentityVerifyProcessStatus = {
  IDENTITY_VERIFY_PROCESS_STATUS_UNKNOWN: 0,
  IDENTITY_VERIFY_PROCESS_STATUS_REQUEST_SAVE: 1,
  IDENTITY_VERIFY_PROCESS_STATUS_REQUEST_SEND: 2,
  IDENTITY_VERIFY_PROCESS_STATUS_REQUEST_ERROR: 3,
  IDENTITY_VERIFY_PROCESS_STATUS_RESULT_ERROR: 4,
  IDENTITY_VERIFY_PROCESS_STATUS_RESULT_NO_IDENTITY: 5,
  IDENTITY_VERIFY_PROCESS_STATUS_RESULT_IDENTITIES: 6,
  IDENTITY_VERIFY_PROCESS_STATUS_ALL: 100
};

goog.object.extend(exports, proto.sensetime.gateway);
